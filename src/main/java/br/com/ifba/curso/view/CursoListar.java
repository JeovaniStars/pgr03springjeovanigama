/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.ifba.curso.view;

import br.com.ifba.curso.controller.CursoController;
import br.com.ifba.curso.controller.CursoIController;
import br.com.ifba.curso.dao.CursoDao;
import br.com.ifba.curso.entity.Curso;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Bruno
 */
public class CursoListar extends javax.swing.JFrame {

    
    private final CursoIController cursoController; 
    private List<Curso> cursos; // Guarda a lista de cursos vinda do banco
    private TableRowSorter<DefaultTableModel> sorter;
    
    
    public CursoListar() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.cursoController = new CursoController();
        this.configurarTela();
    }
    
    private void configurarTela() {
        btnEditar.setEnabled(false);
        btnExcluir.setEnabled(false);
        this.carregarTabelaCompleta();
        this.configurarBusca();
        this.configurarSelecaoTabela();
    }

    private void preencherTabela(List<Curso> listaCursos) {
        DefaultTableModel modelo = (DefaultTableModel) tblCursos.getModel();
        modelo.setRowCount(0);
        this.cursos = listaCursos;

        for (Curso curso : this.cursos) {
            String estado = curso.isAtivo() ? "Ativo" : "Inativo";
            modelo.addRow(new Object[]{
                curso.getNome(),
                curso.getDescricao(),
                estado
            });
        }
    }

    /**
     * Carrega a lista completa de cursos do banco de dados e exibe na tela.
     */
    public void carregarTabelaCompleta() {
        try {
            List<Curso> todosCursos = cursoController.findAllCursos();
            preencherTabela(todosCursos);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                "Erro ao carregar dados da tabela: \n" + e.getMessage(),
                "Erro", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    private void configurarSelecaoTabela() {
        tblCursos.getSelectionModel().addListSelectionListener(e -> {
            boolean linhaSelecionada = tblCursos.getSelectedRow() != -1;
            btnEditar.setEnabled(linhaSelecionada);
            btnExcluir.setEnabled(linhaSelecionada);
        });
    }

    private void configurarBusca() {
        // O RowSorter não é mais necessário para o filtro no banco, mas o listener sim.
        txtBusca.getDocument().addDocumentListener(new DocumentListener() {
            @Override public void insertUpdate(DocumentEvent e) { filtrar(); }
            @Override public void removeUpdate(DocumentEvent e) { filtrar(); }
            @Override public void changedUpdate(DocumentEvent e) { filtrar(); }
        });
    }

    /**
     * MÉTODO FILTRAR ATUALIZADO: Agora busca no banco de dados.
     */
    private void filtrar() {
        String textoBusca = txtBusca.getText();
        try {
            if (textoBusca.isBlank()) {
                // Se a busca estiver vazia, carrega todos os cursos
                carregarTabelaCompleta();
            } else {
                // Se tiver algo digitado, busca no banco por nome
                List<Curso> cursosFiltrados = cursoController.findByNome(textoBusca);
                preencherTabela(cursosFiltrados);
            }
        } catch (Exception e) {
             JOptionPane.showMessageDialog(this,
                "Erro ao buscar cursos: \n" + e.getMessage(),
                "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblImageBusca = new javax.swing.JLabel();
        txtBusca = new javax.swing.JTextField();
        btnAdicionar = new javax.swing.JButton();
        btnHomescreen = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCursos = new javax.swing.JTable();
        btnExcluir = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnListar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblImageBusca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ifba/curso/images/lupa.png"))); // NOI18N
        jPanel1.add(lblImageBusca, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        txtBusca.setText("Pesquisar...");
        txtBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscaActionPerformed(evt);
            }
        });
        jPanel1.add(txtBusca, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 170, 30));

        btnAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ifba/curso/images/adicionar.png"))); // NOI18N
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdicionar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 140, 60));

        btnHomescreen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ifba/curso/images/home.png"))); // NOI18N
        btnHomescreen.setText("Homescreen");
        btnHomescreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomescreenActionPerformed(evt);
            }
        });
        jPanel1.add(btnHomescreen, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 10, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 590, 80));

        tblCursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "NOME", "DESCRIÇÃO", "ESTADO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCursos);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 550, 280));

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        getContentPane().add(btnExcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 390, 120, 40));

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 390, 120, 40));

        btnListar.setText("Listar");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });
        getContentPane().add(btnListar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 390, 120, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscaActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        int linhaSelecionada = tblCursos.getSelectedRow();
        if (linhaSelecionada == -1) {
            JOptionPane.showMessageDialog(this, "Por favor, selecione um curso para excluir.");
            return;
        }

        int indiceReal = tblCursos.convertRowIndexToModel(linhaSelecionada);
        Curso cursoParaExcluir = this.cursos.get(indiceReal);

        int resposta = JOptionPane.showConfirmDialog(this, 
            "Deseja realmente excluir o curso '" + cursoParaExcluir.getNome() + "'?", 
            "Confirmar Exclusão", JOptionPane.YES_NO_OPTION);

        if (resposta == JOptionPane.YES_OPTION) {
            try {
                // CHAMADA CORRIGIDA: USANDO O CONTROLLER PARA DELETAR
                cursoController.deleteCurso(cursoParaExcluir);
                
                JOptionPane.showMessageDialog(this, "Curso excluído com sucesso!");
                this.carregarTabelaCompleta(); 
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro ao excluir o curso: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        int linhaSelecionada = tblCursos.getSelectedRow();
        
        // Verifica se alguma linha foi selecionada
        if (linhaSelecionada == -1) {
            JOptionPane.showMessageDialog(this, "Por favor, selecione um curso para editar.");
            return;
        }

        // Pega o curso correto da nossa lista 'cursos'
        int indiceReal = tblCursos.convertRowIndexToModel(linhaSelecionada);
        Curso cursoParaEditar = this.cursos.get(indiceReal);

        // Abre a tela de edição, passando a referência desta tela e o objeto a ser editado
        new CursoEditView(this, cursoParaEditar).setVisible(true);
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        // TODO add your handling code here:
        new CursoSaveView(this).setVisible(true);
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        // TODO add your handling code here:
        this.carregarTabelaCompleta();
        JOptionPane.showMessageDialog(this, "Lista de cursos atualizada!");
    }//GEN-LAST:event_btnListarActionPerformed

    private void btnHomescreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomescreenActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnHomescreenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CursoListar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CursoListar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CursoListar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CursoListar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CursoListar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnHomescreen;
    private javax.swing.JButton btnListar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblImageBusca;
    private javax.swing.JTable tblCursos;
    private javax.swing.JTextField txtBusca;
    // End of variables declaration//GEN-END:variables
}
